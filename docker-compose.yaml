services:
  web:
    build:
      context: .
      dockerfile: web.dockerfile
    ports:
      - 8080:8080
    environment:
      MONGODB_PRE: mongodb
      MONGODB_HOST: db
      MONGODB_USERNAME: user
      MONGODB_PASSWORD: user
      AUTH_TOKEN: ${TWILIO_AUTH_TOKEN}
      ACCOUNT_SID: ${TWILIO_ACCOUNT_SID}
      MESSAGING_SERVICE_SID: ${TWILIO_MESSAGING_SERVICE_SID}
      GMAIL_APP_PASSWORD: ${GMAIL_APP_PASSWORD}
      CLOUDINARY_CLOUD_NAME: ${CLOUDINARY_CLOUD_NAME}
      CLOUDINARY_API_KEY: ${CLOUDINARY_API_KEY}
      CLOUDINARY_API_SECRET: ${CLOUDINARY_API_SECRET}
    depends_on:
      - db
  db:
    build:
      context: .
      dockerfile: db.dockerfile
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: user
      MONGO_INITDB_ROOT_PASSWORD: user
      MONGO_INITDB_DATABASE: multipleCard
    volumes:
      - data:/data/db
      - ./init_db.js:/docker-entrypoint-initdb.d/init_db.js:ro
    ports:
      - 27017:27017
  test:
    build:
      context: .
      dockerfile: db.dockerfile
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: user
      MONGO_INITDB_ROOT_PASSWORD: user
      MONGO_INITDB_DATABASE: multipleCard
    volumes:
      - dataTest:/data/db
      - ./init_db.js:/docker-entrypoint-initdb.d/init_db.js:ro
    ports:
      - 27018:27017
volumes:
  data:
  dataTest:


